<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bmediCancelar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALUAAAApCAYAAABz92iRAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKUSURBVHhe7dzNaxNBHMbxHEQEPSgIeuhFQaRCBd9qGySm
        mGTTpkiVtjZIUvJSNU00wdWmta2VKqgH31DUHCwiBjx48OD/93OfTdk25GeP7c7wHD7QwyS9fHeZnc1M
        5OJoXohswqjJOoyarMOoyTqMmqzDqMk6O0edKUg0tyKJ+Q/iNFriLLYltf6XaNehPTSYrH2S6OyaXBov
        6c16/hv1cHZB0s22TGeXpTYQk4cnBmTp8DF5FokQ7Tq0hwYf9A9JdhJt/pQruVW13Z6ocQUk7r2TG8WX
        snzoiPoPiPbayoGDMjPVlOT9zzJ4/U5Xw11RI+i0+00q51PqFxGFTePUBRmrf5XBiYoeNe7QDJpMg2kJ
        5ts9UWMOjSmH9iGisMuny3K18Hxb1JmC/1DIOTSZ6um+/TJeb8nlm9VO1FgiwROlNpjIFOXYtMTnXnei
        xtoflkq0gUSmeHz8pDjuRidqZ+GHNI/2qQOJTIEpiLP2ZzPq1d/+up82kMgkePvoR40/tAFEpmHUZB1G
        TdZh1GQdRk3WYdRkHUZN1mHUZJ0garyFwdsYbRCRSbaiXmxzqxZZIYgaW2Kwg0AbRGQK/H4Jv2Pyo46V
        XsisU1IHEpli/lxCrlXed6LG/q4xd4PzajLaZG5doreXOlFDvOjdrRN5dTBR2FXPxiXp3aXRchC1v6Wr
        /kXcvtPqh4jCCtsQRx99Dw642Yrag/1dmUaLGwbIGAh64u5bGZ5xg467ooahqYZ/9kcxfkv9EqKwqJ2J
        +nfo7UFDT9Q+byoyUn7lXQFv/CdK7jKnsMAOLRyDh+PwUtWP6pl6etSbcAVgicR58stf1Cbaa9h6iANL
        cXCp1izsGDWRiRg1WYdRk3UYNVmHUZNl8vIPWRXWVUowAs8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="bmediGuardar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALUAAAApCAYAAABz92iRAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKNSURBVHhe7dzPSxRhHMfxJaIICSki++HJKE8hYdrurLO7
        hQlhRAT9ItoSNbIOWZYlbjPPmFAdKqOoPCQhBh06dOj/+7afZ2Jy2W8edZ6Hz+EFHp5dL+9dnp2Z71M4
        ea4uRD5h1OQdRk3eYdTkHUZN3mHU5J2Nox4dk+BmQ8KH76X6bFlOR99lZOE30aZDe2gwnPkowa1YBs6P
        6802/Tfq0vVZ+0Ynonk5kFRkb3JcdpkuKZgC0aZDe2hwf1KUvnhWavGalG4/V9ttixqfgHD6nQxEL2Wn
        2aP+A6Kttt10SF/0VCpPPsnghTstDbdEjaCrja9y2Iyob0SUN/uSfgkbX2Tw4pQeNb6hGTS5BtsS7Lfb
        osYeGlsO7UVEedcbT0h58sW6qEfH7I9C7qHJVdvMDgmjZTl16X4aNS6R4BeltpjIFT3migxNvU6jxrU/
        XCrRFhK5Yrfpkdr8Shp1rbEqHaZbXUjkCmxBzia/0qiHzU973U9bSOQS3H20Uds/lAVErmHU5B1GTd5h
        1OQdRk3eYdTkHUZN3mHU5J0satyFwd0YbRGRS7Ko8YQeR7XIB1nUGInBBIG2iMgVeH4JzzHZqMuTi3LM
        jKsLiVxxKBmW8MFSGjXmuyrxCvfV5LT+aEGCG3Np1BDcXZSjUV1dTJR3B01Nhh4ttc4oYqSrMvdZOk2v
        +iKivMIYYjX6lh1w8y/qJsx3Yc6LAwPkCgRdit5K6dpM1nFL1FC8PG3P/jgSX1XfhCgvuuLAfkOvDxra
        oraaW5HyvVdSjN/YX5ScMqe8wIQWjsHDcXjh4w/qmXp61H/hE4BLJGfiH/aiNtFWw+ghDizFwaVas7Bh
        1EQuYtTkHUZN3mHU5B1GTZ6pyx+xmtZXXeIN+QAAAABJRU5ErkJggg==
</value>
  </data>
</root>